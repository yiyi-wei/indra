<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.indra.cloud.user.mapper.UserMapper">

    <resultMap id="BaseResultMap" type="com.indra.cloud.user.model.User">
        <id property="userId" column="user_id" jdbcType="BIGINT"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="nickName" column="nick_name" jdbcType="VARCHAR"/>
        <result property="pic" column="pic" jdbcType="VARCHAR"/>
        <result property="status" column="status" jdbcType="INTEGER"/>
        <result property="level" column="level" jdbcType="INTEGER"/>
        <result property="fans" column="fans" jdbcType="INTEGER"/>
        <result property="exp" column="exp" jdbcType="INTEGER"/>
    </resultMap>

    <sql id="Base_Column_List">
        user_id
        ,create_time,update_time,
        nick_name,pic,status,
        level,fans,exp
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user
        where user_id = #{userId,jdbcType=BIGINT}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from user
        where user_id = #{userId,jdbcType=BIGINT}
    </delete>
    <insert id="insert" keyColumn="user_id" keyProperty="userId" parameterType="com.indra.cloud.user.model.User"
            useGeneratedKeys="true">
        insert into user
        ( user_id, create_time, update_time
        , nick_name, pic, status
        , level, fans, exp)
        values ( #{userId,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
               , #{nickName,jdbcType=VARCHAR}, #{pic,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}
               , #{level,jdbcType=INTEGER}, #{fans,jdbcType=INTEGER}, #{exp,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" keyColumn="user_id" keyProperty="userId" parameterType="com.indra.cloud.user.model.User"
            useGeneratedKeys="true">
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">user_id,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="nickName != null">nick_name,</if>
            <if test="pic != null">pic,</if>
            <if test="status != null">status,</if>
            <if test="level != null">level,</if>
            <if test="fans != null">fans,</if>
            <if test="exp != null">exp,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">#{userId,jdbcType=BIGINT},</if>
            <if test="createTime != null">#{createTime,jdbcType=TIMESTAMP},</if>
            <if test="updateTime != null">#{updateTime,jdbcType=TIMESTAMP},</if>
            <if test="nickName != null">#{nickName,jdbcType=VARCHAR},</if>
            <if test="pic != null">#{pic,jdbcType=VARCHAR},</if>
            <if test="status != null">#{status,jdbcType=INTEGER},</if>
            <if test="level != null">#{level,jdbcType=INTEGER},</if>
            <if test="fans != null">#{fans,jdbcType=INTEGER},</if>
            <if test="exp != null">#{exp,jdbcType=INTEGER},</if>
        </trim>
    </insert>
    <insert id="save">
        insert into user (`user_id`,`nick_name`,`pic`,`status`)
        values (#{user.userId},#{user.nickName},#{user.pic},#{user.status});
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.indra.cloud.user.model.User">
        update user
        <set>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="nickName != null">
                nick_name = #{nickName,jdbcType=VARCHAR},
            </if>
            <if test="pic != null">
                pic = #{pic,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=INTEGER},
            </if>
            <if test="level != null">
                level = #{level,jdbcType=INTEGER},
            </if>
            <if test="fans != null">
                fans = #{fans,jdbcType=INTEGER},
            </if>
            <if test="exp != null">
                exp = #{exp,jdbcType=INTEGER},
            </if>
        </set>
        where user_id = #{userId,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.indra.cloud.user.model.User">
        update user
        set create_time = #{createTime,jdbcType=TIMESTAMP},
            update_time = #{updateTime,jdbcType=TIMESTAMP},
            nick_name   = #{nickName,jdbcType=VARCHAR},
            pic         = #{pic,jdbcType=VARCHAR},
            status      = #{status,jdbcType=INTEGER},
            level       = #{level,jdbcType=INTEGER},
            fans        = #{fans,jdbcType=INTEGER},
            exp         = #{exp,jdbcType=INTEGER}
        where user_id = #{userId,jdbcType=BIGINT}
    </update>

    <!--new-->
    <resultMap id="userAndOpenIdsMap" type="com.indra.cloud.api.user.vo.UserApiVO">
        <!--
          WARNING - @mbg.generated
        -->
        <id column="user_id" jdbcType="VARCHAR" property="userId" />
        <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
        <result column="pic" jdbcType="VARCHAR" property="pic" />
        <result column="status" jdbcType="INTEGER" property="status" />
        <collection property="bizUserIdList"  javaType="java.util.List" ofType="string">
            <id column="bizUserIdList" />
        </collection>
    </resultMap>

    <sql id="Vo_Column_List">
        `user_id`,`create_time`,`update_time`,`nick_name`,`pic`,`status`
    </sql>
    <select id="list" resultType="com.indra.cloud.user.vo.UserVO">
        select <include refid="Vo_Column_List"/> from user order by user_id desc
    </select>
    <select id="getByUserId" resultType="com.indra.cloud.api.user.vo.UserApiVO">
        select <include refid="Vo_Column_List"/> from user where user_id = #{userId}
    </select>

    <select id="getUserAndOpenIdsByUserId" resultMap="userAndOpenIdsMap">
        select <include refid="Vo_Column_List"/>,ac.biz_user_id as bizUserIdList from user u
        left JOIN tz_app_connect ac ON u.user_id = ac.user_id and biz_user_id is not null
        WHERE u.user_id =  #{userId}
    </select>



    <update id="update">
        update user
        <set>
            <if test="user.nickName != null">
                `nick_name` = #{user.nickName},
            </if>
            <if test="user.pic != null">
                `pic` = #{user.pic},
            </if>
            <if test="user.status != null">
                `status` = #{user.status},
            </if>
        </set>
        where user_id = #{user.userId}
    </update>

    <select id="getUserByUserIds" resultType="com.indra.cloud.api.user.vo.UserApiVO">
        select `user_id`,`nick_name`,`pic` from user
        where user_id in
        <foreach collection="userIds" item="userId" separator="," open="(" close=")">
            #{userId}
        </foreach>
        order by user_id desc
    </select>
</mapper>
